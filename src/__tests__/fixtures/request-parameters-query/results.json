[
  {
    "code": "request.query.incompatible",
    "message": "Value is incompatible with the parameter defined in the spec file: must be integer",
    "mockDetails": {
      "interactionDescription": "a request using form style with exploded query parameters",
      "interactionState": "[none]",
      "location": "[root].interactions[2].request.query.id.2",
      "value": "abc"
    },
    "source": "spec-mock-validation",
    "specDetails": {
      "location": "[root].paths./explode-true.get.parameters[0].schema.items.type",
      "pathMethod": "get",
      "pathName": "/explode-true",
      "value": "integer"
    },
    "type": "error"
  },
  {
    "code": "request.query.incompatible",
    "message": "Value is incompatible with the parameter defined in the spec file: must be integer",
    "mockDetails": {
      "interactionDescription": "a request using form style with exploded query parameters",
      "interactionState": "[none]",
      "location": "[root].interactions[3].request.query.id.2",
      "value": "abc"
    },
    "source": "spec-mock-validation",
    "specDetails": {
      "location": "[root].paths./explode-true.get.parameters[0].schema.items.type",
      "pathMethod": "get",
      "pathName": "/explode-true",
      "value": "integer"
    },
    "type": "error"
  },
  {
    "code": "request.query.incompatible",
    "message": "Value is incompatible with the parameter defined in the spec file: must be integer",
    "mockDetails": {
      "interactionDescription": "a request using form style with non-exploded query parameters",
      "interactionState": "[none]",
      "location": "[root].interactions[4].request.query.id.2",
      "value": "abc"
    },
    "source": "spec-mock-validation",
    "specDetails": {
      "location": "[root].paths./explode-false.get.parameters[0].schema.items.type",
      "pathMethod": "get",
      "pathName": "/explode-false",
      "value": "integer"
    },
    "type": "error"
  },
  {
    "code": "request.query.incompatible",
    "message": "Value is incompatible with the parameter defined in the spec file: must be integer",
    "mockDetails": {
      "interactionDescription": "a request using form style with non-exploded query parameters",
      "interactionState": "[none]",
      "location": "[root].interactions[5].request.query.id.2",
      "value": "abc"
    },
    "source": "spec-mock-validation",
    "specDetails": {
      "location": "[root].paths./explode-false.get.parameters[0].schema.items.type",
      "pathMethod": "get",
      "pathName": "/explode-false",
      "value": "integer"
    },
    "type": "error"
  },
  {
    "code": "request.query.unknown",
    "message": "Query parameter is not defined in the spec file: param",
    "mockDetails": {
      "interactionDescription": "unknown query parameters",
      "interactionState": "[none]",
      "location": "[root].interactions[6].request.query.param",
      "value": "unknown"
    },
    "specDetails": {
      "location": "[root].paths./unknown-params.get",
      "pathMethod": "get",
      "pathName": "/unknown-params",
      "value": {
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "type": "warning"
  }
]