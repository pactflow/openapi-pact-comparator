[
  {
    "code": "request.accept.unknown",
    "message": "Request Accept header is defined but the spec does not specify any mime-types to produce",
    "mockDetails": {
      "interactionDescription": "a request to create a pet (failing as the spec does not explicitly define this scenario)",
      "interactionState": "[none]",
      "location": "[root].interactions[0].request.headers.accept",
      "value": "application/json"
    },
    "specDetails": {
      "location": "[root].paths./pet.post",
      "pathMethod": "post",
      "pathName": "/pet",
      "value": {
        "tags": [
          "pet"
        ],
        "summary": "Add a new pet to the store",
        "operationId": "addPet",
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Pet"
        }
      }
    },
    "type": "warning"
  },
  {
    "code": "request.header.unknown",
    "message": "Request header is not defined in the spec file: api_key",
    "mockDetails": {
      "interactionDescription": "a request to create a pet (failing as the spec does not explicitly define this scenario)",
      "interactionState": "[none]",
      "location": "[root].interactions[0].request.headers.api_key",
      "value": "1234"
    },
    "specDetails": {
      "location": "[root].paths./pet.post",
      "pathMethod": "post",
      "pathName": "/pet",
      "value": {
        "tags": [
          "pet"
        ],
        "summary": "Add a new pet to the store",
        "operationId": "addPet",
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Pet"
        }
      }
    },
    "type": "warning"
  },
  {
    "code": "response.status.unknown",
    "message": "Response status code not defined in spec file: 201",
    "mockDetails": {
      "interactionDescription": "a request to create a pet (failing as the spec does not explicitly define this scenario)",
      "interactionState": "[none]",
      "location": "[root].interactions[0].response.status",
      "value": 201
    },
    "specDetails": {
      "location": "[root].paths./pet.post.responses",
      "pathMethod": "post",
      "pathName": "/pet",
      "value": {
        "405": {
          "description": "Invalid input"
        }
      }
    },
    "type": "error"
  },
  {
    "code": "request.accept.unknown",
    "message": "Request Accept header is defined but the spec does not specify any mime-types to produce",
    "mockDetails": {
      "interactionDescription": "a request to create a pet with invalid body",
      "interactionState": "[none]",
      "location": "[root].interactions[1].request.headers.accept",
      "value": "application/json"
    },
    "specDetails": {
      "location": "[root].paths./pet.post",
      "pathMethod": "post",
      "pathName": "/pet",
      "value": {
        "tags": [
          "pet"
        ],
        "summary": "Add a new pet to the store",
        "operationId": "addPet",
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Pet"
        }
      }
    },
    "type": "warning"
  },
  {
    "code": "response.content-type.unknown",
    "message": "Response Content-Type header is defined but the spec does not specify any mime-types to produce",
    "mockDetails": {
      "interactionDescription": "a request to create a pet with invalid body",
      "interactionState": "[none]",
      "location": "[root].interactions[1].response.headers.content-type",
      "value": "application/json"
    },
    "specDetails": {
      "location": "[root].paths./pet.post",
      "pathMethod": "post",
      "pathName": "/pet",
      "value": {
        "tags": [
          "pet"
        ],
        "summary": "Add a new pet to the store",
        "operationId": "addPet",
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Pet"
        }
      }
    },
    "type": "warning"
  },
  {
    "code": "request.accept.unknown",
    "message": "Request Accept header is defined but the spec does not specify any mime-types to produce",
    "mockDetails": {
      "interactionDescription": "a request to get a pet that does not exist",
      "interactionState": "a pet with ID 10 does not exist",
      "location": "[root].interactions[3].request.headers.accept",
      "value": "application/json"
    },
    "specDetails": {
      "location": "[root].paths./pet/{petId}.get",
      "pathMethod": "get",
      "pathName": "/pet/{petId}",
      "value": {
        "tags": [
          "pet"
        ],
        "summary": "Find pet by ID",
        "description": "Returns a single pet",
        "operationId": "getPetById",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "type": "warning"
  },
  {
    "code": "request.header.unknown",
    "message": "Request header is not defined in the spec file: api_key",
    "mockDetails": {
      "interactionDescription": "a request to place a pet order",
      "interactionState": "a pet with ID 10 exists",
      "location": "[root].interactions[4].request.headers.api_key",
      "value": "1234"
    },
    "specDetails": {
      "location": "[root].paths./store/order.post",
      "pathMethod": "post",
      "pathName": "/store/order",
      "value": {
        "tags": [
          "store"
        ],
        "summary": "Place an order for a pet",
        "operationId": "placeOrder",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Order"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          },
          "description": "order placed for purchasing the pet",
          "required": true
        }
      }
    },
    "type": "warning"
  }
]