[
  {
    "code": "response.body.incompatible",
    "message": "Response body is incompatible with the response body schema in the spec file: value of tag \"petType\" must be in oneOf",
    "mockDetails": {
      "interactionDescription": "should error on unknown pet",
      "interactionState": "[none]",
      "location": "[root].interactions[6].response.body",
      "value": {
        "petType": "Spider"
      }
    },
    "specDetails": {
      "location": "[root].paths./pet.get.responses.200.content.application/json.schema.discriminator",
      "pathMethod": "get",
      "pathName": "/pet",
      "value": {
        "propertyName": "petType"
      }
    },
    "type": "error"
  },
  {
    "code": "response.body.incompatible",
    "message": "Response body is incompatible with the response body schema in the spec file: must be object",
    "mockDetails": {
      "interactionDescription": "should error with invalid response",
      "interactionState": "[none]",
      "location": "[root].interactions[7].response.body.detail",
      "value": null
    },
    "specDetails": {
      "location": "[root].paths./animal.get.responses.200.content.application/json.schema.type",
      "pathMethod": "get",
      "pathName": "/animal"
    },
    "type": "error"
  },
  {
    "code": "response.body.unknown",
    "message": "No matching schema found for response body",
    "mockDetails": {
      "interactionDescription": "should error with unknown response body",
      "interactionState": "[none]",
      "location": "[root].interactions[8].response.body",
      "value": {
        "unknown": "schema"
      }
    },
    "specDetails": {
      "location": "[root].paths./no-response-schema.get.responses.200",
      "pathMethod": "get",
      "pathName": "/no-response-schema",
      "value": {
        "description": "OK",
        "content": {}
      }
    },
    "type": "error"
  },
  {
    "code": "response.content-type.unknown",
    "message": "Response Content-Type header is defined but the spec does not specify any mime-types to produce",
    "mockDetails": {
      "interactionDescription": "should error with unknown response body",
      "interactionState": "[none]",
      "location": "[root].interactions[8].response.headers.Content-Type",
      "value": "application/json"
    },
    "specDetails": {
      "location": "[root].paths./no-response-schema.get",
      "pathMethod": "get",
      "pathName": "/no-response-schema",
      "value": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          }
        }
      }
    },
    "type": "warning"
  }
]