[
  {
    "code": "response.body.incompatible",
    "message": "Response body is incompatible with the response body schema in the spec file: value of tag \"petType\" must be in oneOf",
    "mockDetails": {
      "interactionDescription": "should error on unknown pet",
      "interactionState": "[none]",
      "location": "[root].interactions[4].response.body",
      "mockFile": "/Users/voon.wong/src/pactflow/openapi-pact-comparator/src/__tests__/fixtures/response-body/pact.json",
      "value": {
        "petType": "Spider"
      }
    },
    "source": "spec-mock-validation",
    "specDetails": {
      "location": "[root].paths./pet.get.responses.200.content.application/json.schema.discriminator",
      "pathMethod": "get",
      "pathName": "/pet",
      "specFile": "/Users/voon.wong/src/pactflow/openapi-pact-comparator/src/__tests__/fixtures/response-body/oas.yaml",
      "value": {
        "propertyName": "petType"
      }
    },
    "type": "error"
  },
  {
    "code": "response.body.incompatible",
    "message": "Response body is incompatible with the response body schema in the spec file: must be object",
    "mockDetails": {
      "interactionDescription": "should error with invalid response",
      "interactionState": "[none]",
      "location": "[root].interactions[5].response.body.detail",
      "mockFile": "/Users/voon.wong/src/pactflow/openapi-pact-comparator/src/__tests__/fixtures/response-body/pact.json",
      "value": null
    },
    "source": "spec-mock-validation",
    "specDetails": {
      "location": "[root].paths./animal.get.responses.200.content.application/json.schema.type",
      "pathMethod": "get",
      "pathName": "/animal",
      "specFile": "/Users/voon.wong/src/pactflow/openapi-pact-comparator/src/__tests__/fixtures/response-body/oas.yaml"
    },
    "type": "error"
  }
]
