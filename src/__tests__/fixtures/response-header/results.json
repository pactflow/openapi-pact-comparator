[
  {
    "code": "response.content-type.unknown",
    "message": "Response Content-Type header is defined but the spec does not specify any mime-types to produce",
    "mockDetails": {
      "interactionDescription": "should warn even with 204 status",
      "interactionState": "[none]",
      "location": "[root].interactions[2].response.headers.content-type",
      "value": "text/plain"
    },
    "specDetails": {
      "location": "[root].paths./delete.delete",
      "pathMethod": "delete",
      "pathName": "/delete",
      "value": {
        "responses": {
          "204": {
            "description": "OK",
            "content": {}
          }
        }
      }
    },
    "type": "warning"
  },
  {
    "code": "response.header.undefined",
    "message": "Standard http response header is not defined in the spec file: content-length",
    "mockDetails": {
      "interactionDescription": "should warn even with 204 status",
      "interactionState": "[none]",
      "location": "[root].interactions[2].response.headers.content-length"
    },
    "specDetails": {
      "location": "[root].paths./delete.delete",
      "pathMethod": "delete",
      "pathName": "/delete",
      "value": {
        "responses": {
          "204": {
            "description": "OK",
            "content": {}
          }
        }
      }
    },
    "type": "warning"
  },
  {
    "code": "response.header.undefined",
    "message": "Standard http response header is not defined in the spec file: age",
    "mockDetails": {
      "interactionDescription": "should warn about missing standard response headers",
      "interactionState": "[none]",
      "location": "[root].interactions[3].response.headers.age"
    },
    "specDetails": {
      "location": "[root].paths./path.get",
      "pathMethod": "get",
      "pathName": "/path",
      "value": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "specified": {
                "schema": {
                  "type": "number"
                }
              },
              "access-control-allow-origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "type": "warning"
  },
  {
    "code": "response.header.incompatible",
    "message": "Value is incompatible with the parameter defined in the spec file: must be number",
    "mockDetails": {
      "interactionDescription": "should error on incompatible response headers",
      "interactionState": "[none]",
      "location": "[root].interactions[4].response.headers.specified",
      "value": "abc"
    },
    "specDetails": {
      "location": "[root].paths./path.get.responses.200.headers.specified.schema.type",
      "pathMethod": "get",
      "pathName": "/path",
      "value": "number"
    },
    "type": "error"
  },
  {
    "code": "response.header.unknown",
    "message": "Response header is not defined in the spec file: unspecified",
    "mockDetails": {
      "interactionDescription": "should error on unspecified response headers",
      "interactionState": "[none]",
      "location": "[root].interactions[5].response.headers.unspecified",
      "value": "foo"
    },
    "specDetails": {
      "location": "[root].paths./path.get.responses.200.headers",
      "pathMethod": "get",
      "pathName": "/path",
      "value": {
        "specified": {
          "schema": {
            "type": "number"
          }
        },
        "access-control-allow-origin": {
          "schema": {
            "type": "string"
          }
        }
      }
    },
    "type": "error"
  },
  {
    "code": "response.status.default",
    "message": "Response status code matched default response in spec file: 200",
    "mockDetails": {
      "interactionDescription": "should use default response",
      "interactionState": "[none]",
      "location": "[root].interactions[6].response.status",
      "value": 200
    },
    "specDetails": {
      "location": "[root].paths./default.get.responses",
      "pathMethod": "get",
      "pathName": "/default",
      "value": {
        "default": {
          "description": "OK",
          "headers": {
            "specified": {
              "schema": {
                "type": "number"
              }
            }
          },
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "type": "warning"
  },
  {
    "code": "response.content-type.incompatible",
    "message": "Response Content-Type header is incompatible with the mime-types the spec defines to produce",
    "mockDetails": {
      "interactionDescription": "should error on unknown response content type, per status code",
      "interactionState": "[none]",
      "location": "[root].interactions[7].response.headers.content-type",
      "value": "text/html"
    },
    "specDetails": {
      "location": "[root].paths./different-response-types.get.responses.200.content",
      "pathMethod": "get",
      "pathName": "/different-response-types",
      "value": [
        "application/json"
      ]
    },
    "type": "error"
  },
  {
    "code": "response.status.unknown",
    "message": "Response status code not defined in spec file: 400",
    "mockDetails": {
      "interactionDescription": "should not check for response headers issues if OAS doesn't define it",
      "interactionState": "[none]",
      "location": "[root].interactions[8].response.status",
      "value": 400
    },
    "specDetails": {
      "location": "[root].paths./path.get.responses",
      "pathMethod": "get",
      "pathName": "/path",
      "value": {
        "200": {
          "description": "OK",
          "headers": {
            "specified": {
              "schema": {
                "type": "number"
              }
            },
            "access-control-allow-origin": {
              "schema": {
                "type": "string"
              }
            }
          },
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        }
      }
    },
    "type": "error"
  },
  {
    "code": "response.status.unknown",
    "message": "Response status code not defined in spec file: 400",
    "mockDetails": {
      "interactionDescription": "should not warn about response.content-type.unknown",
      "interactionState": "[none]",
      "location": "[root].interactions[9].response.status",
      "value": 400
    },
    "specDetails": {
      "location": "[root].paths./path.get.responses",
      "pathMethod": "get",
      "pathName": "/path",
      "value": {
        "200": {
          "description": "OK",
          "headers": {
            "specified": {
              "schema": {
                "type": "number"
              }
            },
            "access-control-allow-origin": {
              "schema": {
                "type": "string"
              }
            }
          },
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        }
      }
    },
    "type": "error"
  }
]