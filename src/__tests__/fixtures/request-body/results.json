[
  {
    "code": "request.content-type.missing",
    "message": "Request content type header is not defined but spec specifies mime-types to consume",
    "mockDetails": {
      "interactionDescription": "should pass for 4xx responses even with missing content types",
      "interactionState": "[none]",
      "location": "[root].interactions[5].request.headers.content-type",
      "value": null
    },
    "specDetails": {
      "location": "[root].paths./login.post",
      "pathMethod": "post",
      "pathName": "/login",
      "value": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/request"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/request"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "description",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "description",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "type": "warning"
  },
  {
    "code": "request.body.incompatible",
    "message": "Request body is incompatible with the request body schema in the spec file: must be object",
    "mockDetails": {
      "interactionDescription": "should error with missing body",
      "interactionState": "[none]",
      "location": "[root].interactions[8].request.body"
    },
    "specDetails": {
      "location": "[root].paths./login.post.requestBody.content.application/json.schema.components.schemas.request.type",
      "pathMethod": "post",
      "pathName": "/login",
      "value": "object"
    },
    "type": "error"
  },
  {
    "code": "request.body.incompatible",
    "message": "Request body is incompatible with the request body schema in the spec file: must be object",
    "mockDetails": {
      "interactionDescription": "should error on empty body",
      "interactionState": "[none]",
      "location": "[root].interactions[9].request.body",
      "value": ""
    },
    "specDetails": {
      "location": "[root].paths./login.post.requestBody.content.application/json.schema.components.schemas.request.type",
      "pathMethod": "post",
      "pathName": "/login",
      "value": "object"
    },
    "type": "error"
  },
  {
    "code": "request.body.incompatible",
    "message": "Request body is incompatible with the request body schema in the spec file: must have required property 'password'",
    "mockDetails": {
      "interactionDescription": "should error on schema mismatch for json body",
      "interactionState": "[none]",
      "location": "[root].interactions[10].request.body",
      "value": {
        "email": "a@a.com"
      }
    },
    "specDetails": {
      "location": "[root].paths./login.post.requestBody.content.application/json.schema.components.schemas.request.required",
      "pathMethod": "post",
      "pathName": "/login",
      "value": [
        "email",
        "password"
      ]
    },
    "type": "error"
  },
  {
    "code": "request.body.incompatible",
    "message": "Request body is incompatible with the request body schema in the spec file: must have required property 'password'",
    "mockDetails": {
      "interactionDescription": "should error on schema mismatch for form body",
      "interactionState": "[none]",
      "location": "[root].interactions[11].request.body",
      "value": {
        "email": "a@a.com"
      }
    },
    "specDetails": {
      "location": "[root].paths./login.post.requestBody.content.application/x-www-form-urlencoded.schema.components.schemas.request.required",
      "pathMethod": "post",
      "pathName": "/login",
      "value": [
        "email",
        "password"
      ]
    },
    "type": "error"
  },
  {
    "code": "request.body.incompatible",
    "message": "Request body is incompatible with the request body schema in the spec file: must have required property 'password'",
    "mockDetails": {
      "interactionDescription": "should error on schema mismatch for multipart body",
      "interactionState": "[none]",
      "location": "[root].interactions[12].request.body",
      "value": {
        "email": "a@a.com"
      }
    },
    "specDetails": {
      "location": "[root].paths./login.post.requestBody.content.multipart/form-data.schema.components.schemas.request.required",
      "pathMethod": "post",
      "pathName": "/login",
      "value": [
        "email",
        "password"
      ]
    },
    "type": "error"
  },
  {
    "code": "request.body.incompatible",
    "message": "Request body is incompatible with the request body schema in the spec file: must have required property 'password'",
    "mockDetails": {
      "interactionDescription": "should error on schema mismatch for json body",
      "interactionState": "[none]",
      "location": "[root].interactions[13].request.body",
      "value": {
        "email": "a@a.com"
      }
    },
    "specDetails": {
      "location": "[root].paths./optional-body.post.requestBody.content.application/json.schema.components.schemas.request.required",
      "pathMethod": "post",
      "pathName": "/optional-body",
      "value": [
        "email",
        "password"
      ]
    },
    "type": "error"
  }
]