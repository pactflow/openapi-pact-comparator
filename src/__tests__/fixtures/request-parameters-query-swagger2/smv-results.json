[
  {
    "code": "request.query.unknown",
    "message": "Query parameter is not defined in the spec file: unknown_key",
    "mockDetails": {
      "interactionDescription": "should warn about unknown query parameters",
      "interactionState": "[none]",
      "location": "[root].interactions[1].request.query.unknown_key",
      "value": "unknown_value"
    },
    "specDetails": {
      "location": "[root].paths./string.get",
      "pathMethod": "get",
      "pathName": "/string",
      "value": {
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "age",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "type": "warning"
  },
  {
    "code": "request.query.incompatible",
    "message": "Value is incompatible with the parameter defined in the spec file: must be number",
    "mockDetails": {
      "interactionDescription": "should error when optional query parameter is incompatible",
      "interactionState": "[none]",
      "location": "[root].interactions[2].request.query.age",
      "value": "abc"
    },
    "specDetails": {
      "location": "[root].paths./string.get.parameters[1]",
      "pathMethod": "get",
      "pathName": "/string",
      "value": {
        "in": "query",
        "name": "age",
        "required": false,
        "type": "number"
      }
    },
    "type": "error"
  },
  {
    "code": "request.query.incompatible",
    "message": "Value is incompatible with the parameter defined in the spec file: must have required property 'value'",
    "mockDetails": {
      "interactionDescription": "should error when missing required query parameter",
      "interactionState": "[none]",
      "location": "[root].interactions[3]",
      "value": {
        "description": "should error when missing required query parameter",
        "request": {
          "method": "GET",
          "path": "/string"
        },
        "response": {
          "status": 200
        }
      }
    },
    "specDetails": {
      "location": "[root].paths./string.get.parameters[0]",
      "pathMethod": "get",
      "pathName": "/string",
      "value": {
        "in": "query",
        "name": "name",
        "required": true,
        "type": "string"
      }
    },
    "type": "error"
  },
  {
    "code": "request.query.incompatible",
    "message": "Value is incompatible with the parameter defined in the spec file: must be number",
    "mockDetails": {
      "interactionDescription": "should warn about incompatible array types",
      "interactionState": "[none]",
      "location": "[root].interactions[4].request.query.multi",
      "value": "7[multi-array-separator]8[multi-array-separator]d"
    },
    "specDetails": {
      "location": "[root].paths./array.get.parameters[3]",
      "pathMethod": "get",
      "pathName": "/array",
      "value": {
        "in": "query",
        "name": "multi",
        "required": true,
        "type": "array",
        "items": {
          "type": "number"
        },
        "collectionFormat": "multi"
      }
    },
    "type": "error"
  },
  {
    "code": "request.query.incompatible",
    "message": "Value is incompatible with the parameter defined in the spec file: must be number",
    "mockDetails": {
      "interactionDescription": "should warn about incompatible array types",
      "interactionState": "[none]",
      "location": "[root].interactions[4].request.query.pipes",
      "value": "5|6|c"
    },
    "specDetails": {
      "location": "[root].paths./array.get.parameters[2]",
      "pathMethod": "get",
      "pathName": "/array",
      "value": {
        "in": "query",
        "name": "pipes",
        "required": true,
        "type": "array",
        "items": {
          "type": "number"
        },
        "collectionFormat": "pipes"
      }
    },
    "type": "error"
  },
  {
    "code": "request.query.incompatible",
    "message": "Value is incompatible with the parameter defined in the spec file: must be number",
    "mockDetails": {
      "interactionDescription": "should warn about incompatible array types",
      "interactionState": "[none]",
      "location": "[root].interactions[4].request.query.ssv",
      "value": "1 2 a"
    },
    "specDetails": {
      "location": "[root].paths./array.get.parameters[0]",
      "pathMethod": "get",
      "pathName": "/array",
      "value": {
        "in": "query",
        "name": "ssv",
        "required": true,
        "type": "array",
        "items": {
          "type": "number"
        },
        "collectionFormat": "ssv"
      }
    },
    "type": "error"
  },
  {
    "code": "request.query.incompatible",
    "message": "Value is incompatible with the parameter defined in the spec file: must be number",
    "mockDetails": {
      "interactionDescription": "should warn about incompatible array types",
      "interactionState": "[none]",
      "location": "[root].interactions[4].request.query.tsv",
      "value": "3\t4\tb"
    },
    "specDetails": {
      "location": "[root].paths./array.get.parameters[1]",
      "pathMethod": "get",
      "pathName": "/array",
      "value": {
        "in": "query",
        "name": "tsv",
        "required": true,
        "type": "array",
        "items": {
          "type": "number"
        },
        "collectionFormat": "tsv"
      }
    },
    "type": "error"
  }
]
