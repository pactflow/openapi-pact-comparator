[
  {
    "code": "request.query.incompatible",
    "message": "Value is incompatible with the parameter defined in the spec file: must be string",
    "mockDetails": {
      "interactionDescription": "should fail with missing parameters",
      "interactionState": "[none]",
      "location": "[root].interactions[1].request.query.account."
    },
    "source": "spec-mock-validation",
    "specDetails": {
      "location": "[root].paths./login.post.parameters[0].schema.type",
      "pathMethod": "post",
      "pathName": "/login",
      "value": "string"
    },
    "type": "error"
  },
  {
    "code": "request.body.incompatible",
    "message": "Request body is incompatible with the request body schema in the spec file: must have required property 'username'",
    "mockDetails": {
      "interactionDescription": "should fail with bad request body",
      "interactionState": "[none]",
      "location": "[root].interactions[2].request.body.",
      "value": {}
    },
    "specDetails": {
      "location": "[root].paths./login.post.requestBody.content.application/json.schema.required",
      "pathMethod": "post",
      "pathName": "/login",
      "value": [
        "username"
      ]
    },
    "type": "error"
  },
  {
    "code": "response.body.incompatible",
    "message": "Response body is incompatible with the response body schema in the spec file: must NOT have additional properties - username",
    "mockDetails": {
      "interactionDescription": "should fail with bad response body",
      "interactionState": "[none]",
      "location": "[root].interactions[3].response.body.",
      "value": {
        "username": "bob"
      }
    },
    "specDetails": {
      "location": "[root].paths./login.post.responses.201.content.application/json.schema.additionalProperties",
      "pathMethod": "post",
      "pathName": "/login",
      "value": false
    },
    "type": "error"
  }
]